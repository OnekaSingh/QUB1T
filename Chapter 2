#2: Basic Circuit Identities
from qiskit import QuantumCircuit
from qiskit.circuit import Gate
from math import pi

qc = QuantumCircuit(2)
c = 0
t = 0

qc1.cz(c, t) #controlled-Z gate (control, target)

#Quantum devices can only perform C-NOT gates, so we transpile this CZ gate
#All gates can be transpiled into c-nots & single gates
#HXH = Z; HZH = X;

#Also a CZ (H-CX-H):
qc.h(t)
qc.cx(c, t)
qc.h(t)

#A CRY:
qc.sdg(t)
qc.cx(c, t)
qc.s(t)

#A CH:
qc.ry(pi/4, t)
qc.cx(c, t)
qc.ry(-pi/4, t)

#SWAP Gate:
a = 0
b = 1
qc.swap(a, b)

#Also a SWAP Gate:
qc.cx(b, a) #When b is 0, first gate is useless
qc.cx(a, b)
qc.cx(b, a) #When a is 0, third gate is useless

#Controlled Rotations (generalized to any Î¸):
theta = pi #this rotation value can change
qc.ry(theta/2, t) #Rotate qubit on the y axis by theta
qc.cx(c, t)
qc.ry(-theta/2, t)
qc.cx(c, t) #This circuit SWAPS the target qubit if the control is 1

#Custom Gates:
A = Gate('A', 1, [])
B = Gate('B', 1, [])
C = Gate('C', 1, [])
alpha = 1 #The phase 
qc.append(C, [t])
qc.cz(c, t)
qc.append(B, [t])
qc.cz(c, t)
qc.append(A, [t])
qc.p(alpha, c)






